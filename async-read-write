const { readFile, writeFile } = require('fs').promises
// const util = require('util')
// const readFilePromise = util.promisify(readFile)
// const writeFilePromise = util.promisify(writeFile)

const start = async() => {
    try {
        const first = await readFile('./content/first.txt', 'utf8');
        const second = await readFile('./content/second.txt', 'utf8');
        await writeFile('./content/result.txt', `This is awesome: ${first}, ${second}`)
        console.log(first, second)
    }
    catch (error) {
        console.log(error)
    }
}

start()

// const getText = (path) => {
//     return new Promise((resolve, reject) => {
//         readFile(path, 'utf8', (err, data) => {
//             if (err) {
//               reject(err)
//             }
//             else resolve(data);
//         })
//     })
// }

// getText('./content/first.txt')
//     .then(result => console.log(result))
//     .catch(err => console.log(err))


// const http = require('http')

// const server = http.createServer((req, res) => {
//     console.log('request event')
//     res.end('hello world')
// })

// server.listen(2000, ()=> {
//     console.log('Server is listening on port: 2000...')
// })

